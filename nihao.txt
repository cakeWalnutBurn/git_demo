冯·诺依曼计算机核心思想与工作方式：
① 采用“存储程序”工作方式
② 计算器由存储器、运算器、控制器、输入输出设备五个基本部件组成
③ 存储器不仅能存放数据，而且也能存放指令；控制器应能自动执行指令；运算器能进行四种基本算数运算，并且也能进行逻辑运算；操作人员可以通过输入输出设备使用计算器
④ 计算器内部以二进制形式表示指令和数据；

工作方式：事先将程序(包含指令和数据)存入主存储器中，计算机在运行程序时就能自动地、连续地从存储器中依次取出指令且执行

简单CPU结构和数据通路说明：
CPU组成：数据通路和控制器组成
作用：是计算机核心部件，主要用于指令的执行

数据通路作用：主要用于执行算数和逻辑运算以及寄存器和存储器的读写控制
控制器作用：对指令进行译码，生成相应的控制信号，以控制数据通路进行正确的操作

如何区分指令与数据：
1.通过不同的时间段来区分指令和数据，即在取指令阶段（或取指微程序）取出的为指令，在执行指令阶段（或相应微程序）取出的即为数据。

2. 通过地址来源区分，由PC提供存储单元地址的取出的是指令，由IR提供存储单元地址的取出的是操作数。

汇编语言DEBUG 调试工具中的运行命令和反汇编命令：
反汇编命令：-U[range] 
运行命令：-G

基于计算机语言的计算机系统功能层次结构的描述：
微体系结构：这是一个硬件级，它由机器硬件直接执行微指令
汇编语言级: 它给程序人员提供一种符号形式的语言，以减少程序编写的复杂性。这一级由汇编程序支持执行；
操作系统级: 它由操作系统程序实现,这些操作系统由机器指令和广义指令组成，这些广义指令是操作系统定义和解释的软件指令，这一级也称混合级；
高级语言级: 这是面向用户为编写应用程序而设置的。这一级由各种高级语言编译程序支持
机器语言级: 它由微程序解释机器指令系统.这一级是硬件级

定点整数的补码表示：正数的补码是本身，缺少的位数在前面补0；负数的补码为真值取反加1，缺少的的位数在前面补1
补码能表示的数值范围：-2^n 到 2^n - 1 (n是补码表示位数)
[x] 补与[-x] 补的关系：x补码取反加一为-X补码，-X补码取反加一为X的补码

整数数据类型转换的位数扩展：正数前面补0，负数前面补1

算术左移，右移: 对于无符号数左移高位移除，低位补0，如果最高位移除的是1则发生溢出，对于右移，高位补0，低位移除
               带符号数左移高位移除，低位补0，如果左移前后符号位不同，则溢出，对于右移，高位补符号位，低位移除


数据对齐概念：
存储器是由连续的位构成的，计算机的访存机制最多只能读64位，即8个字节，如果访问的数据不在8i到8i+7中则需要多次访问，执行效率低，因此数据在存储器中存放时需要进行对齐

DRAM和SRAM的存储原理与作用（比较速度容量价格）
SRAM：采用正负反馈电路存储信息。读写速度快，价格昂贵
DRAM：采用电容存储电荷方式存储信息。读写速度慢，价格低廉


多级存储结构的作用映射原理：
为了缩小存储器和处理器两者之间在性能方面的差距。
数据使用一般只在相邻两层之间复制传送，总是从慢速存储器复制到快速存储器中。

虚拟存储器的概念：
具有请求调入和置换功能，能从逻辑上对内存容量进行扩充的存储器系统

微程序、微指令、微命令、微地址概念：
微地址：存储在微地址寄存器中的下一条微指令的地址称为微地址
微命令：控制部件通过控制线向执行部件发出的控制命令称为微命令
微指令：在机器的一个CPU周期中，一组实现一定功能的微命令的组合，构成一条微指令
微程序：一系列微指令的有序集合称为微程序
机器指令与微程序的关系：一条机器指令对应一个微程序

指令周期：是指计算机从取指到指令执行完毕的时间
时钟周期：又称震荡周期，是处理操作的最基本单位

有一个256K×16位的存储器，由64K×8位的DRAM芯片构成
总共需要多少DRAM芯片？画出此存储器与CPU连接的逻辑结构图。 
答：（256K×16）/（64K×8）= 4 * 2 = 8
